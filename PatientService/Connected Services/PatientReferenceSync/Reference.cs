//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatientReferenceSync
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/PatientManager.Models")]
    public partial class Patient : object
    {
        
        private string AddressField;
        
        private System.DateTime AgeField;
        
        private int ContactField;
        
        private int HospitalUnitField;
        
        private string NameField;
        
        private PatientReferenceSync.RNCCI RNCCITypologyField;
        
        private int UtenteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                this.AgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Contact
        {
            get
            {
                return this.ContactField;
            }
            set
            {
                this.ContactField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HospitalUnit
        {
            get
            {
                return this.HospitalUnitField;
            }
            set
            {
                this.HospitalUnitField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PatientReferenceSync.RNCCI RNCCITypology
        {
            get
            {
                return this.RNCCITypologyField;
            }
            set
            {
                this.RNCCITypologyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Utente
        {
            get
            {
                return this.UtenteField;
            }
            set
            {
                this.UtenteField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RNCCI", Namespace="http://schemas.datacontract.org/2004/07/PatientManager.Tools")]
    public enum RNCCI : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UMDR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ULDM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDCCI = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PatientReferenceSync.IPatientRegistration")]
    public interface IPatientRegistration
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/AddPatient", ReplyAction="http://tempuri.org/IPatientRegistration/AddPatientResponse")]
        string AddPatient(PatientReferenceSync.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/AddPatient", ReplyAction="http://tempuri.org/IPatientRegistration/AddPatientResponse")]
        System.Threading.Tasks.Task<string> AddPatientAsync(PatientReferenceSync.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/AddPatientBulk", ReplyAction="http://tempuri.org/IPatientRegistration/AddPatientBulkResponse")]
        void AddPatientBulk(System.Collections.Generic.List<PatientReferenceSync.Patient> patients);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/AddPatientBulk", ReplyAction="http://tempuri.org/IPatientRegistration/AddPatientBulkResponse")]
        System.Threading.Tasks.Task AddPatientBulkAsync(System.Collections.Generic.List<PatientReferenceSync.Patient> patients);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/GetPatients", ReplyAction="http://tempuri.org/IPatientRegistration/GetPatientsResponse")]
        string GetPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientRegistration/GetPatients", ReplyAction="http://tempuri.org/IPatientRegistration/GetPatientsResponse")]
        System.Threading.Tasks.Task<string> GetPatientsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IPatientRegistrationChannel : PatientReferenceSync.IPatientRegistration, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class PatientRegistrationClient : System.ServiceModel.ClientBase<PatientReferenceSync.IPatientRegistration>, PatientReferenceSync.IPatientRegistration
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PatientRegistrationClient() : 
                base(PatientRegistrationClient.GetDefaultBinding(), PatientRegistrationClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPatientRegistration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PatientRegistrationClient(EndpointConfiguration endpointConfiguration) : 
                base(PatientRegistrationClient.GetBindingForEndpoint(endpointConfiguration), PatientRegistrationClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PatientRegistrationClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PatientRegistrationClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PatientRegistrationClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PatientRegistrationClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PatientRegistrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string AddPatient(PatientReferenceSync.Patient patient)
        {
            return base.Channel.AddPatient(patient);
        }
        
        public System.Threading.Tasks.Task<string> AddPatientAsync(PatientReferenceSync.Patient patient)
        {
            return base.Channel.AddPatientAsync(patient);
        }
        
        public void AddPatientBulk(System.Collections.Generic.List<PatientReferenceSync.Patient> patients)
        {
            base.Channel.AddPatientBulk(patients);
        }
        
        public System.Threading.Tasks.Task AddPatientBulkAsync(System.Collections.Generic.List<PatientReferenceSync.Patient> patients)
        {
            return base.Channel.AddPatientBulkAsync(patients);
        }
        
        public string GetPatients()
        {
            return base.Channel.GetPatients();
        }
        
        public System.Threading.Tasks.Task<string> GetPatientsAsync()
        {
            return base.Channel.GetPatientsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPatientRegistration))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPatientRegistration))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:53182/Services/PatientRegistration.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PatientRegistrationClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPatientRegistration);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PatientRegistrationClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPatientRegistration);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPatientRegistration,
        }
    }
}
